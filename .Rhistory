library(ggplot2)
set.seed(123)
toy = tibble( X1 = rnorm(100), X2 = rnorm(100) ) %>%
mutate( actual = factor( X1^2 + X2^2 < 1.4 ) )
ggplot( toy, aes(x = X1, y = X2, col = actual )) + geom_point()
glm_out = glm(actual ~ X1 + X2, family = "binomial", data = toy)
broom::tidy(glm_out)
toy %>% modelr::add_predictions(glm_out, var = "distance") %>%
mutate( predicted = ifelse(distance < 0, "B", "M")  ) %>%
xtabs(~ predicted + actual, data = .) %>% prop.table()
ggplot(glm_out, aes(x=X1, y=X2, col = actual)) + geom_point() + geom_abline(slope = 0.26986276/0.09617137, intercept = -0.3629454/0.09617137)
library(rpart)
rpart_out = rpart(actual ~ X1 + X2, data = toy, method = "class")
rpart_out
predict(rpart_out) %>% head(2)
toy %>%
modelr::add_predictions(rpart_out, type = "class") %>%
xtabs( ~ pred + actual, data = .) %>%
prop.table()
library(rpart.plot)
rpart.plot(rpart_out)
toy %>%
mutate(D = sqrt(X1^2 + X2^2)) %>%
gather(key, value, D) %>%
ggplot(aes(x = value, fill = actual)) +
geom_histogram(position = "dodge", bins = 30) +
facet_wrap(.~key, scales = "free")
library(rpart)
rpart_out = rpart(actual ~ X1 + X2, data = toy, method = "class")
rpart_out
toy %>%
modelr::add_predictions(rpart_out, type = "class") %>%
xtabs( ~ pred + actual, data = .) %>%
prop.table()
library(tidyverse)
library(rpart)
library(ggplot2)
set.seed(123)
toy = tibble( X1 = rnorm(100), X2 = rnorm(100) ) %>%
mutate( actual = factor( X1^2 + X2^2 < 1.4 ) )
ggplot( toy, aes(x = X1, y = X2, col = actual )) + geom_point()
glm_out = glm(actual ~ X1 + X2, family = "binomial", data = toy)
broom::tidy(glm_out)
toy %>% modelr::add_predictions(glm_out, var = "distance") %>%
mutate( predicted = ifelse(distance < 0, "B", "M")  ) %>%
xtabs(~ predicted + actual, data = .) %>% prop.table()
ggplot(glm_out, aes(x=X1, y=X2, col = actual)) + geom_point() + geom_abline(slope = 0.26986276/0.09617137, intercept = -0.3629454/0.09617137)
library(rpart)
rpart_out = rpart(actual ~ X1 + X2, data = toy, method = "class")
rpart_out
toy %>%
modelr::add_predictions(rpart_out, type = "class") %>%
xtabs( ~ pred + actual, data = .) %>%
prop.table()
library(rpart.plot)
rpart.plot(rpart_out)
predict(rpart_out, data.frame(X1=c(.5), X2=c(1)))
set.seed(1234)
toy = toy %>%
mutate( actual.rand = factor( sample( c(T,F), size = 100, replace = T ) ) )
ggplot(toy, aes(x = X1, y = X2, col = actual.rand) ) + geom_point()
toy %>% modelr::add_predictions(glm_out, var = "distance") %>%
mutate( predicted = ifelse(distance < 0, "FALSE", "TRUE")  ) %>%
xtabs(~ predicted + actual.rand, data = .) %>% prop.table()
toy %>% modelr::add_predictions( rpart_out, type = "class" ) %>%
xtabs( ~ pred + actual.rand, data = .) %>% prop.table()
toyd =
toy %>%
mutate(D = sqrt(X1^2 + X2^2)) %>%
gather(key, value, D) %>%
ggplot(aes(x = value, fill = actual)) +
geom_histogram(position = "dodge", bins = 30) +
geom_vline(xintercept = 1.18)
toyd =
toy %>%
mutate(distance = sqrt(X1^2 + X2^2)) %>%
gather(key, value, D) %>%
ggplot(aes(x = value, fill = actual)) +
geom_histogram(position = "dodge", bins = 30) +
geom_vline(xintercept = 1.18)
toyd =
toy %>%
mutate(distance = sqrt(X1^2 + X2^2)) %>%
gather(key, value, distance) %>%
ggplot(aes(x = value, fill = actual)) +
geom_histogram(position = "dodge", bins = 30) +
geom_vline(xintercept = 1.18)
toyd
toyd %>%
mutate(naive=T, predictions=ifelse(distance<1.18, T, F)) %>%
summarise(accuracy_prediction=mean(actual==predictions))
toyd =
toy %>%
mutate(distance = sqrt(X1^2 + X2^2)) %>%
gather(key, value, distance) %>%
ggplot(aes(x = value, fill = actual)) +
geom_histogram(position = "dodge", bins = 30) +
geom_vline(xintercept = 1.18)
toyd
toyd %>%
mutate(naive=T, predictions=ifelse(distance<1.18, T, F)) %>%
summarise(accuracy_prediction=mean(actual==predictions))
predict(rpart_out,newdata=tibble(X1=.5,X2=1),type = "class")
toyd =
toy %>%
mutate(distance = sqrt(X1^2 + X2^2)) %>%
gather(key, value, distance) %>%
ggplot(aes(x = value, fill = actual)) +
geom_histogram(position = "dodge", bins = 30) +
geom_vline(xintercept = 1.18)
toyd
toyd %>% mutate(naive=T,predictions=ifelse(distance<1.18,T,F)) %>% summarise(accuracy_prediction=mean(actual==predictions))
toyd =
toy %>% mutate(distance=(X1^2+X2^2) %>% sqrt())
new_toy%>% ggplot(aes(x=distance,fill=actual))+geom_histogram(bins = 30,position = "dodge")+geom_vline(xintercept=1.18)
toyd =
toy %>% mutate(distance=(X1^2+X2^2) %>% sqrt())
toyd%>% ggplot(aes(x=distance,fill=actual))+geom_histogram(bins = 30,position = "dodge")+geom_vline(xintercept=1.18)
toyd
toyd %>% mutate(naive=T, predictions = ifelse(distance < 1.18, T , F)) %>%
summarise(accuracy_prediction=mean(actual == predictions))
toyd =
toy %>% mutate(distance=(X1^2+X2^2) %>% sqrt())
toyd%>% ggplot(aes(x=distance,fill=actual))+geom_histogram(bins = 30,position = "dodge")+geom_vline(xintercept=1.18)
toyd %>% mutate(naive=T, predictions = ifelse(distance < 1.18, T , F)) %>%
summarise(accuracy_prediction=mean(actual == predictions))
toyd =
toy %>%
mutate(distance=(X1^2+X2^2) %>% sqrt())
toyd %>%
ggplot(aes(x=distance,fill=actual))+geom_histogram(bins = 30,position = "dodge")+geom_vline(xintercept=1.18)
toyd %>%
mutate(naive=T, predictions = ifelse(distance < 1.18, T , F)) %>%
summarise(accuracy_prediction=mean(actual == predictions))
toyd =
toy %>%
mutate(distance=(X1^2+X2^2) %>% sqrt())
toyd %>%
ggplot(aes(x=distance,fill=actual))+geom_histogram(bins = 30,position = "dodge")+geom_vline(xintercept=1.18)
toyd %>% mutate(naive=T, predictions = ifelse(distance < 1.18, T , F)) %>%
summarise(accuracy_prediction=mean(actual == predictions))
library(tidyverse)
library(rpart)
library(ggplot2)
set.seed(123)
toy = tibble( X1 = rnorm(100), X2 = rnorm(100) ) %>%
mutate( actual = factor( X1^2 + X2^2 < 1.4 ) )
ggplot( toy, aes(x = X1, y = X2, col = actual )) + geom_point()
glm_out = glm(actual ~ X1 + X2, family = "binomial", data = toy)
broom::tidy(glm_out)
toy %>% modelr::add_predictions(glm_out, var = "distance") %>%
mutate( predicted = ifelse(distance < 0, "B", "M")  ) %>%
xtabs(~ predicted + actual, data = .) %>% prop.table()
ggplot(glm_out, aes(x=X1, y=X2, col = actual)) + geom_point() + geom_abline(slope = 0.26986276/0.09617137, intercept = -0.3629454/0.09617137)
library(rpart)
rpart_out = rpart(actual ~ X1 + X2, data = toy, method = "class")
rpart_out
toy %>%
modelr::add_predictions(rpart_out, type = "class") %>%
xtabs( ~ pred + actual, data = .) %>%
prop.table()
library(rpart.plot)
rpart.plot(rpart_out)
predict(rpart_out,newdata=tibble(X1=.5,X2=1),type = "class")
toyd =
toy %>%
mutate(distance=(X1^2+X2^2) %>% sqrt())
toyd %>%
ggplot(aes(x=distance,fill=actual))+geom_histogram(bins = 30,position = "dodge")+geom_vline(xintercept=1.18)
toyd %>% mutate(naive=T, predictions = ifelse(distance < 1.18, T , F)) %>%
summarise(accuracy_prediction=mean(actual == predictions))
set.seed(1234)
toy = toy %>%
mutate( actual.rand = factor( sample( c(T,F), size = 100, replace = T ) ) )
ggplot(toy, aes(x = X1, y = X2, col = actual.rand) ) + geom_point()
toy %>% modelr::add_predictions(glm_out, var = "distance") %>%
mutate( predicted = ifelse(distance < 0, "FALSE", "TRUE")  ) %>%
xtabs(~ predicted + actual.rand, data = .) %>% prop.table()
toy %>% modelr::add_predictions( rpart_out, type = "class" ) %>%
xtabs( ~ pred + actual.rand, data = .) %>% prop.table()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
URL = 'https://www.univcan.ca/universities/facts-and-stats/tuition-fees-by-university/'
page = read_html(url(URL))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
URL = 'https://www.univcan.ca/universities/facts-and-stats/tuition-fees-by-university/'
page = read_html(url(URL))
page
library(tidyverse)
URL = 'https://www.univcan.ca/universities/facts-and-stats/tuition-fees-by-university/'
page = read_html(url(URL))
page %>%
html_nodes(xpath = '//*[@id="data_table"]') %>%
html_table()
URL = 'https://www.univcan.ca/universities/facts-and-stats/tuition-fees-by-university/'
page = read_html(url(URL))
page %>%
html_nodes(xpath = '//*[@id="data_table"]') %>%
html_table(fill = TRUE)
URL = 'https://www.univcan.ca/universities/facts-and-stats/tuition-fees-by-university/'
page = read_html(url(URL))
page %>%
html_nodes(xpath = '//*[@id="data_table"]') %>%
html_table(fill = TRUE)
URL = 'https://www.univcan.ca/universities/facts-and-stats/tuition-fees-by-university/'
page = read_html(url(URL))
page %>%
html_nodes(xpath = '//*[@id="data_table"]') %>%
html_table(fill = TRUE) %>% [[1]]
URL = 'https://www.univcan.ca/universities/facts-and-stats/tuition-fees-by-university/'
page = read_html(url(URL))
page %>%
html_nodes(xpath = '//*[@id="data_table"]') %>%
html_table(fill = TRUE)[[1]]
URL = 'https://www.univcan.ca/universities/facts-and-stats/tuition-fees-by-university/'
page = read_html(url(URL))
page %>%
html_nodes(xpath = '//*[@id="data_table"]') %>%
html_table(fill = TRUE)
URL = 'https://www.univcan.ca/universities/facts-and-stats/tuition-fees-by-university/'
page = read_html(url(URL))
page %>%
html_nodes(xpath = '//*[@id="data_table"]') %>%
html_table(fill = TRUE) %>% select(University)
can-undergrad = read_csv("data/can-undergrad.csv")
>>>>>>> b340a902ddf79c8a1d3ecbcede0fc9df35ba52c8
can-undergrad = read_csv("data/can-undergrad.csv")
## echo=FALSE stops the code chunk from appearing in the html document
## warning=FALSE / message=FALSE stop R warnings/messages from appearing in the knit document
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(stringr)
library(ggplot2)
can-undergrad = read_csv("data/can-undergrad.csv")
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
View(canGrad)
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
View(canGrad)
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
View(canGrad)
View(canUndergrad)
View(interGrad)
View(interUndergrad)
## echo=FALSE stops the code chunk from appearing in the html document
## warning=FALSE / message=FALSE stop R warnings/messages from appearing in the knit document
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(stringr)
library(ggplot2)
timeToAmortize <- function(yearEarning, tuition ){
time = tuition/yearEarning
return(time)
}
## echo=FALSE stops the code chunk from appearing in the html document
## warning=FALSE / message=FALSE stop R warnings/messages from appearing in the knit document
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(stringr)
library(ggplot2)
timeToAmortize <- function(yearEarning, tuition){
time = tuition/yearEarning
return(time)
}
canUndergrad %>% transmute(AvgTuition = mean("2014/2015", "2015/2016", "2016/2017", "2017/2018", "2018/2019"))
canUndergrad %>% transmute(AvgTuition = mean("2014/2015", "2015/2016", "2016/2017", "2017/2018", "2018/2019", na.rm = TRUE))
canUndergrad %>% transmute(AvgTuition = mean("2014/2015", "2015/2016", "2016/2017", "2017/2018", "2018/2019", na.rm = FALSE))
canUndergrad %>% mutate(AvgTuition = mean("2014/2015", "2015/2016", "2016/2017", "2017/2018", "2018/2019", na.rm = FALSE))
canUndergrad %>% mutate(AvgTuition = mean("2014/2015", "2015/2016", "2016/2017", "2017/2018", "2018/2019", na.rm = TRUE))
canUndergrad %>% mutate(AvgTuition = mean(2014/2015, 2015/2016, 2016/2017, 2017/2018, 2018/2019, na.rm = TRUE))
canUndergrad %>% mutate(AvgTuition = mean('2014/2015', '2015/2016', '2016/2017', '2017/2018', '2018/2019', na.rm = TRUE))
canUndergrad %>% mutate(AvgTuition = mean('2014 / 2015', '2015 / 2016', '2016 / 2017', '2017 / 2018', '2018 / 2019', na.rm = TRUE))
canUndergrad %>% mutate(AvgTuition = mean('2014/ 2015', '2015/ 2016', '2016/ 2017', '2017/ 2018', '2018/ 2019', na.rm = TRUE))
canUndergrad %>% mutate(AvgTuition = ('2014/ 2015' + '2015/2016' + '2016/2017' + '2017/2018' + '2018/2019')/5)
canUndergrad %>% mutate(AvgTuition = mean('2014/ 2015', '2015/2016', '2016/2017', '2017/2018', '2018/2019', na.rm = TRUE))
canUndergrad %>% mutate(AvgTuition = mean('2014/2015', '2015/2016', '2016/2017', '2017/2018', '2018/2019', na.rm = TRUE))
canUndergrad %>% mutate(AvgTuition = mean(canUndergrad$`2014 / 2015`, canUndergrad$`2015 / 2016`, canUndergrad$`2016 / 2017`, canUndergrad$`2017 / 2018`, canUndergrad$`2018 / 2019`, na.rm = TRUE))
canUndergrad %>% mutate(AvgTuition = mean('2014/2015', '2015/2016', '2016/2017', '2017/2018', '2018/2019', na.rm = TRUE))
canUndergrad %>% mutate(AvgTuition = '2014/2015' + '2015/2016' + '2016/2017' + '2017/2018' + '2018/2019')
canUndergrad %>% rename(x1 = '2014/2015')
canUndergrad %>% rename(x1 = 2014/2015)
canUndergrad %>% rename(x1 = `2014/2015`)
canUndergrad %>% rename(x1 = '2014/2015')
canUndergrad %>% rename(x1 = '2014 / 2015
')
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
canUndergrad %>% rename(x1 = '2014-2015')
#mutate(AvgTuition = '2014/2015' + '2015/2016' + '2016/2017' + '2017/2018' + '2018/2019')
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
canUndergrad %>% mutate(AvgTuition = '2014-2015' + '2015-2016' + '2016-2017' + '2017-2018' + '2018-2019')
canUndergrad %>%
#mutate(AvgTuition = '2014-2015' + '2015-2016' + '2016-2017' + '2017-2018' + '20182019')
canUndergrad %>% rename(y1 = '2014-2015')
#mutate(AvgTuition = '2014-2015' + '2015-2016' + '2016-2017' + '2017-2018' + '20182019')
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016')
#mutate(AvgTuition = '2014-2015' + '2015-2016' + '2016-2017' + '2017-2018' + '20182019')
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019')
#mutate(AvgTuition = '2014-2015' + '2015-2016' + '2016-2017' + '2017-2018' + '2018-2019')
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019')
mutate(AvgTuition = mean(y1, y2, y3, y4, y5, na.rm = TRUE))
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019')
mutate(AvgTuition = mean('y1', 'y2', 'y3', 'y4', 'y5', na.rm = TRUE))
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(AvgTuition = mean('y1', 'y2', 'y3', 'y4', 'y5', na.rm = TRUE))
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(AvgTuition = 'y1' + 'y2' + 'y3' + 'y4' + 'y5')
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
income = read_csv("DAta/income6.csv")
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(AvgTuition = `y1` + `y2` + `y3` + `y4` + `y5`)
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(AvgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5)
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% transmute(AvgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5)
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(AvgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5)
interUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(AvgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5)
canGrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(AvgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5)
interGrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(AvgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5)
interGrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(AvgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5)
View(income)
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
income = read_csv("DAta/income6.csv")
View(income)
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
income = read_csv("DAta/income6.csv")
income = group_by(income, CorrespondingTo) %>% summarise(avgIncome = mean(`Average after-tax income ($)`))
View(income)
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(AvgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "CorrespondingTo")
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
income = read_csv("DAta/income6.csv")
income = group_by(income, CorrespondingTo) %>% summarise(avgIncome = mean(`Average after-tax income ($)`)) %>% rename(CorrespondingTo = Field of study)
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
income = read_csv("DAta/income6.csv")
income = group_by(income, CorrespondingTo) %>% summarise(avgIncome = mean(`Average after-tax income ($)`)) %>% rename(CorrespondingTo = 'Field of study')
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
income = read_csv("DAta/income6.csv")
income = group_by(income, CorrespondingTo) %>% summarise(avgIncome = mean(`Average after-tax income ($)`)) %>% rename(Field of study = 'CorrespondingTo')
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
income = read_csv("DAta/income6.csv")
income = group_by(income, CorrespondingTo) %>% summarise(avgIncome = mean(`Average after-tax income ($)`)) %>% rename(Field_of_study = 'CorrespondingTo')
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(AvgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study")
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
income = read_csv("data/income6.csv")
income = group_by(income, CorrespondingTo) %>% summarise(avgIncome = mean(`Average after-tax income ($)`)) %>% rename(Field_of_study = 'CorrespondingTo')
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition))
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(amortizeTime)
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(amortizeTime, desc())
help("arrange")
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(amortizeTime)
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(amortizeTime) %>% select(1)
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(amortizeTime)
canUndergrad %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(desc(amortizeTime))
canUndergrad %>% leastWorthIt()
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
income = read_csv("data/income6.csv")
income = group_by(income, CorrespondingTo) %>% summarise(avgIncome = mean(`Average after-tax income ($)`)) %>% rename(Field_of_study = 'CorrespondingTo')
mostWorthIt <- function(dat){
dat = dat %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(amortizeTime)
return(dat)
}
leastWorthIt <- function(dat){
dat = dat %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(desc(amortizeTime))
return(dat)
}
canUndergrad %>% leastWorthIt()
leastWorthIt(interUndergrad)
leastWorthIt(canGrad)
leastWorthIt(interGrad)
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
income = read_csv("data/income6.csv")
income = group_by(income, CorrespondingTo) %>% summarise(avgIncome = mean(`Average after-tax income ($)`)) %>% rename(Field_of_study = 'CorrespondingTo')
mostWorthIt <- function(dat){
dat = dat %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(amortizeTime)
return(dat)
}
leastWorthIt <- function(dat){
dat = dat %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(desc(amortizeTime)) %>% head(1)
return(dat)
}
leastWorthIt(canUndergrad)
## echo=FALSE stops the code chunk from appearing in the html document
## warning=FALSE / message=FALSE stop R warnings/messages from appearing in the knit document
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(stringr)
library(ggplot2)
timeToAmortize <- function(yearEarning, tuition){
time = tuition/yearEarning
return(time)
}
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
income = read_csv("data/income6.csv")
income = group_by(income, CorrespondingTo) %>% summarise(avgIncome = mean(`Average after-tax income ($)`)) %>% rename(Field_of_study = 'CorrespondingTo')
mostWorthIt <- function(dat){
dat = dat %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(amortizeTime)
return(dat)
}
leastWorthIt <- function(dat){
dat = dat %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(desc(amortizeTime)) %>% head(1)
return(dat)
}
leastWorthIt(canUndergrad)
leastWorthIt(interUndergrad)
leastWorthIt(canGrad)
leastWorthIt(interGrad)
## echo=FALSE stops the code chunk from appearing in the html document
## warning=FALSE / message=FALSE stop R warnings/messages from appearing in the knit document
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(stringr)
library(ggplot2)
timeToAmortize <- function(yearEarning, tuition){
time = (tuition*4)/yearEarning
return(time)
}
# loading data sets
canUndergrad = read_csv("data/can-undergrad.csv")
canGrad = read_csv("data/can-grad.csv")
interUndergrad = read_csv("data/inter-undergrad.csv")
interGrad = read_csv("data/inter-grad.csv")
income = read_csv("data/income6.csv")
income = group_by(income, CorrespondingTo) %>% summarise(avgIncome = mean(`Average after-tax income ($)`)) %>% rename(Field_of_study = 'CorrespondingTo')
mostWorthIt <- function(dat){
dat = dat %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(amortizeTime)
return(dat)
}
leastWorthIt <- function(dat){
dat = dat %>% rename(y1 = '2014-2015', y2 = '2015-2016', y3 = '2016-2017', y4 = '2017-2018', y5 = '2018-2019') %>% mutate(avgTuition = (`y1` + `y2` + `y3` + `y4` + `y5`)/5) %>% right_join(income, by = "Field_of_study") %>% mutate(amortizeTime = timeToAmortize(avgIncome, avgTuition)) %>% arrange(desc(amortizeTime)) %>% head(1)
return(dat)
}
leastWorthIt(canUndergrad)
leastWorthIt(interUndergrad)
leastWorthIt(canGrad)
leastWorthIt(interGrad)
